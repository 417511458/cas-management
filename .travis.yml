# Steps to enable this build are:
#
# Generate the OAUTH-TOKEN at https://github.com/settings/applications
# Install travis: gem install travis
# Login to travis: travis login
# Encrypt the token: travis encrypt VAR_NAME=VAR_VALUE -r apereo/cas --add env.global
# Encrypted settings include

language: java
sudo: required
dist: trusty
services:
- docker
branches:
  only:
  - master
before_cache:
- rm -rf $HOME/.gradle/caches/4.*/
- rm -fr $HOME/.gradle/caches/*/plugin-resolution/
- find ~/.gradle/caches/ -name "*.lock" -type f -delete
# Remove once Travis CI fixes JDK setup
before_script:
 - unset -v _JAVA_OPTIONS
 - wget https://github.com/sormuras/bach/raw/master/install-jdk.sh
 - chmod +x install-jdk.sh
 - export JAVA_HOME=$(./install-jdk.sh --emit-java-home -F 11 -c | tail --lines 1)
 - echo $JAVA_HOME
cache:
  bundler: false
  cargo: false
  directories:
  - $HOME/.m2
  - $HOME/.npm/
  - $HOME/.gradle/caches/
  - $HOME/.gradle/wrapper/
git:
  depth: 2
notifications:
  slack:
    secure: "gNFUOGd0isowSwPfQ9VqGQWhWRDAjzX9tfH0xGe2gyg1kiOhq3Odb8fdcUg9f3DhAbiMxGDu08IgmDbeEyncB42Zdqk/DFvD3F958WaVy0O9TF2iAzO+ftBG0+slFHPDZ8qAy97+mV/be7KBkLYP+BydYTVfO84NvpLNiylmOVU="
matrix:
  fast_finish: true
env:
  global:
  - JAVA_OPTS="-Xms512m -Xmx4048m -Xss128m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -Xverify:none -server"
  - GRADLE_OPTS="-Xms512m -Xmx1024m -Xss128m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -Xverify:none -server"
  - SPRING_MAIN_BANNER-MODE="off"
  - secure: "yXHv0eLXSehCHONr5nOWtXqX6KCe19LlaXq/yLWeBl5kWxKCOSfU1lC3YSpVL9jIjhChn/DoBiwcpYPn2CmsftkySelhWLgdtwwIzHqSGhsPq6GX6/JJH8cwfQiZoiqLvAHOEinbk66lyxLg9lmDjbfJtIYDwBU7JmXbejO1cmkKCSjhwOI+24N8uXUikHpr2QqEFtRkzB4Q00w9LQXFSLrjru1wTkKrbbcFP0VLphjBlwsg2Ed1JqotaxQ0PirenpmncScnk497rSc0QHv0+UoBtHtN9J4M8yjH2lTpI4QOF/3c5kZCznZpCKCiPlrM/wcWpi9MbllPrkQuTwmIJ7X1J5Q0IF38r0m5YaRp2Kxqb2sR4AKQq3xtgDbPEzSt6l4e+PXdPalIDn4/SuaOBFZhBVipDEpXJ7snnOcisUpyszaMuMD+8Zu1N/umJL0fLrfRSa+o+FPIUwlIk4dLAztN6kMv2aBLsI9SvDo+Jk2Q7egA7lBJXMpGFoGB8HrVf7GUPnGOmgXPFeU+yySVJTAACpRoQoFOywsPt8JPBcg96TI3sWdrzlzreX5aIUAt8zeXNn9Q7oQP4CnmisEqfvGpvVdSv50lLztnDe01fBRX2/5M32V0RgYj9ZDk9mbF5saKZoB1FfEhrYS4RG00wsxRXZHHIKGYKxNxCTDKewU="
before_install:
- mkdir -p ~/.gradle && echo "org.gradle.daemon=false" >> ~/.gradle/gradle.properties
- unset _JAVA_OPTIONS
- chmod -R 777 ./ci/*.sh
- ./ci/init-travis-build.sh
install: true
script:
- ./ci/script.sh
after_script:
- ./ci/stop.sh
stages:
- initialize
- build
- publish
- postbuild
- test
- dependencies
- spotbugs
jobs:
  include:
  - stage: initialize
    script: ./ci/download-dependencies.sh
    name: "Initialize Build System"
    ############################################
  - stage: build
    script: ./ci/build.sh
    name: "Build CAS Management"
    ############################################
  - stage: publish
    if: NOT commit_message =~ ^\[skip\s+snapshots\] and type != "pull_request" and (branch =~ /^\d+\.\d+\.x$/ or branch = master)
    script: ./ci/publish-snapshots-release.sh
    name: "Publish Artifacts"
    ############################################
  - stage: postbuild
    script: ./ci/analyze-sonarqube.sh
    if: type != pull_request
    name: "SonarCloud Analysis"
  - stage: postbuild
    script: ./ci/analyze-style.sh
    name: "Checkstyle Analysis"
  - stage: postbuild
    script: ./ci/push-docs-ghpages.sh
    if: type != pull_request and (branch =~ /^\d+\.\d+\.x$/ or branch = master)
    name: "Publish Documentation"
  - stage: postbuild
    script: ./ci/build-javadocs.sh
    name: "Build Javadocs"
  - stage: postbuild
    script: ./ci/check-config-factories.sh
    name: "Configuration Factory Analysis"
    ############################################
  - stage: dependencies
    script: ./ci/analyze-dependencies.sh
    name: "Dependency Security Analysis"
  - stage: dependencies
    if: type != pull_request and (branch =~ /^\d+\.\d+\.x$/ or branch = master)
    script: ./ci/report-dependency-updates.sh
    name: "Dependency Update Report"
    ############################################
  - stage: test
    script: ./ci/tests/run-tests-simple.sh
    name: "Simple Unit Tests"
after_success:
  - bash <(curl -s https://codecov.io/bash)
